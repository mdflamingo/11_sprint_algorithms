# Id задачи 88929614
def make_simetric(n):
    """ Получаем число n и делаем симметричный список.
        Например, дают нам число 6 и мы делаем список
        1 2 3 3 2 1.
    """
    mass = list(range(1, n + 1))
    reversed_mass = list(reversed(mass))
    result = []
    for x in range(len(mass)):
        if mass[x] <= reversed_mass[x]:
            result.append(mass[x])
        else:
            result.append(reversed_mass[x])
    return result


# Входные данные
n = int(input())
numbers = list(map(int, input().split()))


start_not_zero = False
if numbers[0] != 0:
    start_not_zero = True

# Результирующий список
result = []
# Счетчик того, сколько раз были цифры до следующего 0
# (Спойлер: 0 может уже и не встретиться)
count = 0

# Основной цикл, в котором проходимся по входным числам
for x in numbers:
    # Проверяем, что очередная цифра не 0, тогда прибавляем счетчик
    if x != 0:
        count += 1

    # Условие, которое срабатывает, когда мы встретили 0
    # и ОДНОВРЕМЕННО проверяем, что список начинался не с 0,
    # то есть перед этим были какие-то цифры
    # [ 9, 8, 2, 0 ....] - 9 8 2 - те самые цифры, которые шли перед 0
    # поэтому нам надо наш буфер, в котором на данный момент [1, 2, 3]
    # реверснуть и превратить в [3, 2 , 1], после не забыв прибавить 0
    elif x == 0 and start_not_zero:
        # Сразу делаем start_not_zero = False, чтобы больше условие не сработало,
        # ведь цифры идущие перед первым 0, встретились только один раз
        start_not_zero = False
        # Получаем обратную числовую последовательность [count, count-1,...,0],
        # добавляем в финальный список и обнуляем счетчик
        num_seq = range(count, -1, -1)
        result.extend(num_seq)
        count = 0

    # Условие, которое срабатывает, когда мы встретили 0
    # и проверяем, что счетчик не на начальном значении,
    # затем используем функцию make_simetric
    # и ее вывод добавляем в результирующую последовательность.
    # Не забываем добавить в результат попавшийся 0
    # Пример: начальный список [ ... 0, 34, 25, 1, 0 ...]
    # счетчик count = 3, симметричная последовательность
    # будет [1, 2 , 1], добавляем ее в результирующую последовательность,
    # не забывая потом добавить еще встретившийся 0
    elif x == 0 and count != 0:
        simetric_mass = make_simetric(count)
        result.extend(simetric_mass)
        result.append(0)
        count = 0
    # Попался ноль, а count = 0.
    # Пример: начальный список по типу [... 0, 0, ...]
    elif x == 0:
        result.append(0)
# Если начальный список чисел закончился, а счетчик не равен 0,
# то формируем последовательность чисел [1, 2, ..., count]
# Пример: [ ...0, 21, 1, 32, 23]
result.extend(range(1, count + 1))

print(*result)
